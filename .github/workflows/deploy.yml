name: sync_BE CI/CD

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.docker_build.outputs.image_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and (Optionally) Push Docker image
        id: docker_build
        run: |
          # 디버깅 추가
          set -x # 실행되는 모든 명령어를 로그에 출력
          echo "=========================================="
          echo "Current event is: ${{ github.event_name }}"
          echo "Current ref is: ${{ github.ref }}"
          echo "=========================================="

          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:${{ github.sha }}
          docker build -t $IMAGE_NAME .
          
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "Event is 'push'. Attempting to push to Docker Hub..."
            docker push $IMAGE_NAME
            echo "Docker push command finished. Now setting output."
            echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
            echo "Output 'image_name' was set to: $IMAGE_NAME"
          else
            echo "Event is not 'push'. Skipping push and output."
          fi

  deploy:
    needs: build
    if: needs.build.outputs.image_name != '' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        env:
          IMAGE_NAME: ${{ needs.build.outputs.image_name }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deploying IMAGE_NAME: $IMAGE_NAME"
            
            if [ -z "$IMAGE_NAME" ]; then
              echo "IMAGE_NAME is empty. Deployment cannot proceed."
              exit 1
            fi

            CONTAINER_NAME=""
            PORT=""

            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              CONTAINER_NAME="prod-app"
              PORT="8080"
            elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
              CONTAINER_NAME="dev-app"
              PORT="8081"
            fi
            
            sudo docker stop $CONTAINER_NAME || true
            sudo docker rm $CONTAINER_NAME || true
            sudo docker pull "$IMAGE_NAME"
            
            sudo docker run -d -p $PORT:8080 --name $CONTAINER_NAME \
              -e MONGO_URI="$MONGO_URI" \
              -e JWT_SECRET="$JWT_SECRET" \
              -e MAIL_PASSWORD="$MAIL_PASSWORD" \
              --restart=always \
              "$IMAGE_NAME"
            
            sudo docker image prune -af